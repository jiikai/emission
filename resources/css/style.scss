@charset 'utf-8';
@import 'mixins';
@include font-face('Fira Sans', '../fonts/fira-sans/fira-sans-v8-latin-regular');

@keyframes fadeIn {
  from {
    opacity: 0;
  } to {
    opacity: 1;
  }
}

/*  Variable declarations. */

$black: #000;
$color-bg-default: #fdf4ff;
$color-fg-default: #111;
$color-bg-checkbox: #a499ec;
$color-selection: #a8d1ff;
$color-border: #ccc;
$color-border-print: #999;
$color-icon: #4f5b66;
$color-del: #8b0000;
$color-bg-btn-active: rgba(#c692d1, 0.68);
$color-fg-btn-active: rgba(#080210, 0.71);
$color-border-btn-active: rgba(#134243, 0.5);

$border-default: 2px solid $color-border;

$font-default: 'Fira Sans';
$font-family-default: 'Sans Serif';
$font-weight-default: 500;
$display-default: inline-flex;
$font-size-default: 1em;
$margin-default: 5px;
$line-height-default: 1.15;

$transition-default: .1s ease-in-out;

/*  Universal rules. */
* {
  ::selection {
    background: $color-selection;
    text-shadow: none;
  }
  ::before, ::after {
    box-sizing: border-box;
  }
}

html {
  align-items: center;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
}

body {
  background-color: $color-bg-default;
  color: $color-fg-default;
  font-family: $font-default;
  font-size: $font-size-default;
  font-style: normal;
  font-weight: $font-weight-default;
  margin: 0;
  padding: 0;
}

fieldset {
  border: 0;
  margin: 0;
  min-width: 0;
  padding: 0;
}

details {
  display: block;
}

hr {
  border: 0;
  border-top: 1px solid $black;
  box-sizing: border-box;
  display: block;
  height: 0;
  margin: 1em 0;
  padding: 0;
}

img {
  border-style: none;
}

label {
  align-items: center;
  justify-content: center;
  vertical-align: middle;
}

option {
  background-color: inherit;
  color: $color-fg-default;
  font-family: inherit;
  font-size: inherit;
}

/*  Extendable base classes. */

%button-base {
  background-color: transparentize($color-bg-default, 0.85);
  border: 2px solid darken($color-border, 25%);
  border-radius: 5px;
  color: darken($color-fg-default, 1%);
  cursor: pointer;
  display: flex;
  font-family: inherit;
  font-size: $font-size-default;
  font-style: normal;
  font-weight: $font-weight-default;
  justify-content: center;
  margin: 2px;
  min-width: 8vmax;
  outline: none;
  padding: 1vmin;
  text-align: center;
  user-select: none;
  width: auto;
  &:active, &focus {
    background-color: $color-bg-btn-active;
    border-color: $color-border-btn-active;
    color: $color-fg-btn-active;
    transition: color $transition-default, background-color $transition-default, border-color $transition-default;
  }
  @media (hover: hover) {
    &:hover {
      background-color: $color-bg-btn-active;
      border-color: $color-border-btn-active;
      color: $color-fg-btn-active;
      transition: color $transition-default, background-color $transition-default, border-color $transition-default;
    }
  }
}

%container-base {
  align-items: center;
  text-align: center;
  width: 100%;
}

%select-base {
  background-color: darken($color-bg-default, 2%);
  border: 2px solid darken($color-border, 25%);
  border-radius: 2px;
  color: inherit;
  font-family: inherit;
  font-size: inheri t;
  margin: 1vmin auto;
  min-width: 125px;
  outline: none;
  padding: 0.75vmin;
  width: 100%;
  &:active, &:focus {
    background-color: $color-bg-default;
    border-color: lighten($color-fg-default, 10%);
  }
  @media (hover: hover) {
    &:hover {
      border-color: lighten($color-fg-default, 5%);
    }
  }
  &:invalid {
    color: darken($color-border, 12%);
  }
}

%wrapper-base {
  margin: auto;
  width: 90vw;
}

/*  Application classes. */


/*  For <button> elements. */

.button-blk {
  @extend %button-base;
  display: block;
}

.button-inl {
  @extend %button-base;
  display: inline-flex;
}

/*  Chart <div> element class for tui.chart. */
.chart-area {
  margin: auto;
  width: 100%;
}

/*  <div> container classes for various HTML elements. */

.container-button-row {
  @extend %container-base;
  display: inline-flex;
  justify-content: center;
  margin-right: .5rem;
  padding: 0;
}

.container-checkbox {
  display: inline-flex;
  flex-wrap: wrap;
  input[type='checkbox'] {
    font-size: 1rem;
    margin: 0 .25rem 0 0;
    position: static;
    vertical-align: middle;
  }
  label {
    font-size: 14px;
    margin: 0 .5rem 0 0;
  }
}

.container-checkbox-row {
  @extend %container-base;
  display: inline-block;
  padding: 0;
}

.container-search {
  @extend %container-base;
  display: flex;
  margin: auto;
  max-width: 840px;
  position: relative;
  i {
    color: $color-icon;
    line-height: inherit;
    margin-left: 1vmax;
    position: absolute;
    top: 30%;
    transition: width, height 0.4s ease-in-out;
    z-index: 1;
  }
  @media (hover: hover) {
    &:hover {
      border-color: lighten($color-fg-default, 5%);
      i {
        transform: scale(1.15);
      }
    }
  }
}

.container-select-blk {
  @extend %container-base;
  display: inline-block;
  max-width: 840px;
  select {
    @extend %select-base;
  }
}

.container-select-row {
  @extend %container-base;
  display: inline-flex;
  max-width: 840px;
  padding: 0;
  select {
    @extend %select-base;
  }
}

.country-list {
  justify-content: center;
  margin: auto;
  width: 100%;
}

.country-list-item {
  background-color: darken($color-bg-default, 2%);
  border: 2px solid $color-icon;
  border-radius: 0.33rem;
  display: inline-flex;
  margin: 0.2vmax;
  padding-bottom: 0.5vmin;
  padding-right: 1.5vmin;
  padding-top: 0.5vmin;
  i {
    color: $color-del;
    padding: 1vw;
  }
  input[type='checkbox'] {
    display: none;
    :checked ~.checked {
      display: inline-block;
    }
  }
  label {
    vertical-align: middle;
  }
  .checked {
    display: none;
  }
  @media (hover: hover) {
    &:hover {
      i {
        color: lighten($color-del, 20%);
      }
    }
  }
}

.fade-in {
  animation: fadeIn ease-in 1;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  opacity: 0;
}

.greater {
  border-width: 2.1px;
  font-size: 17px;
  min-width: 250px;
  padding: 1.1vmin;
  width: 66%;
  z-index: 10000;
}

.header {
  margin: auto;
  padding: 5px;
  text-align: center;
}

.lesser {
  border-width: 1.8px;
  font-size: 14px;
  padding: 0.85vmin;
}

.narrow {
  width: 45vmax;
}

.p-narrow {
  line-height: 1.33;
  margin: auto;
  max-width: 600px;
  min-width: 100px;
  text-align: justify;
  width: 75%;
}

.search-field {
  cursor: pointer;
  display: inline-flex;
  max-width: 420px;
  width: 100%;
  input[type='text'] {
    background-color: darken($color-bg-default, 2%);
    border: 2px solid darken($color-border, 25%);
    border-radius: 2px;
    cursor: pointer;
    display: inline-flex;
    font-family: inherit;
    font-size: inherit;
    margin-right: 0.75vmin;
    outline: none;
    padding: 0.75vmin 0.75vmin 0.75vmin 5vmax;
    width: 100%;
    &:active, &:focus {
      background-color: $color-bg-default;
    }
    @media (hover: hover) {
      &:hover {
        border-color: lighten($color-fg-default, 5%);
      }
    }
  }
}

.vspace {
  height: 66px;
}

.wrapper-blk {
  @extend %wrapper-base;
  display: block;
  text-align: center;
}

.wrapper-flx {
  @extend %wrapper-base;
  display: flex;
  text-align: center;
}

.wrapper-mul {
  @extend %wrapper-base;
}

/*! Utility classes from HTML5 Boilerplate v6.1.0 | MIT License | https://html5boilerplate.com/ */

/*  Make sure all elements with HMTL attribute 'hidden' have display: none. */
[hidden] {
  display: none;
}

/*  Unconditional hide. */
.hidden {
  display: none;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap; /* 1 */
  width: 1px;
  /*
   * Extends the .visuallyhidden class to allow the element
   * to be focusable when navigated to via the keyboard:
   * https://www.drupal.org/node/897638
   */
  .focusable {
    &:active, &:focus {
      clip: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      position: static;
      white-space: inherit;
      width: auto;
    }
  }
}

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix {
  &::before, &::after {
    content: ' ';
    display: table;
  }
  &::after {
    clear: both;
  }
}

/*  Media queries. */
/*@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
//}

/*  Print style. */

@media print {
  * {
    &::before, *::after {
      -webkit-box-shadow: none !important;
      background: transparent !important;
      box-shadow: none !important;
      color: #000 !important; /* Black prints faster */
      text-shadow: none !important;
  }
}

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a {
    text-decoration: underline;
    &:visited {
      text-decoration: inherit;
    }
    &[href] {
      &::after {
        content: ' (' attr(href) ')';
      }
    }
    &[href^='#'], &[href^='javascript:'] {
      &::after {
        content: '';
      }
    }
  }

  abbr[title] {
    &::after {
      content: ' (' attr(title) ')';
    }
  }

  blockquote {
    border: 1px solid $color-border-print;
    page-break-inside: avoid;
  }
  h2, h3 {
    orphans: 3;
    page-break-after: avoid;
    widows: 3;
  }
  img, tr {
    page-break-inside: avoid;
  }
  p {
    orphans: 3;
    widows: 3;
  }
  pre {
    border: 1px solid $color-border-print;
    page-break-inside: avoid;
    white-space: pre-wrap !important;
  }
  thead {
    display: table-header-group;
  }
}
